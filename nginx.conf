user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  
  # Định nghĩa upstream backend
  upstream backend_servers {
    server backend:8080;
  }

  map $http_origin $cors_allow_origin {
      default "";
      "http://localhost:3000" "$http_origin";
      "http://127.0.0.1:3000" "$http_origin";
      "http://localhost:3001" "$http_origin";
      "http://127.0.0.1:3001" "$http_origin";
      "https://fats.vn" "$http_origin";
  }

  server {
    listen       80;
    server_name  fats.vn;
    
    # Frontend SPA - Sửa đổi
    location / {
      root   /usr/share/nginx/html;
      index  index.html;
      try_files $uri $uri/ /index.html;
      
      # Thêm header để debug
      add_header X-Debug-Route "frontend-spa" always;
    }

    # THÊM MỚI: Xử lý các frontend routes đặc biệt bắt đầu bằng /auth/
    location ~ ^/auth/(forgot-password|verify-email|reset-password)$ {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
      add_header X-Debug-Route "auth-frontend-routes" always;
    }

    # THÊM MỚI: Xử lý các frontend routes đặc biệt bắt đầu bằng /members/
    location ~ ^/members/t/ {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
      add_header X-Debug-Route "members-frontend-routes" always;
    }

    # Proxy trực tiếp TOÀN BỘ request bắt đầu bằng "/auth" 
    location /auth/ {
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
    
    # THÊM MỚI: Proxy từ /api/v1/auth/ đến /auth/
    location /api/v1/auth/ {
      # Chuyển tiếp đến /auth/ sau khi loại bỏ /api/v1
      rewrite ^/api/v1/auth/(.*) /auth/$1 break;
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
    
    # Tất cả các API endpoint khác
    location ~ ^/(types|goals|incomes|spends|categories|blogs|bots|icons|subscriptions|ai|files|teams|members|packages|chat-logs|income-types|budgets|payment|ipn|ocr)/ {
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
    
    # THÊM MỚI: Proxy từ /api/v1/ đến các API endpoint tương ứng
    location ~ ^/api/v1/(types|goals|incomes|spends|categories|blogs|bots|icons|subscriptions|ai|files|teams|members|packages|chat-logs|income-types|budgets|payment|ipn|ocr)/ {
      # Loại bỏ /api/v1 khỏi path khi chuyển tiếp
      rewrite ^/api/v1/(.*) /$1 break;
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
    
    # Thêm location chuyên biệt cho /api/v1/hdkt/
    location /api/v1/hdkt/ {
      # Debug headers để dễ troubleshoot
      add_header X-Debug-Original-URI $request_uri always;
      add_header X-Debug-Rewritten-URI $uri always;
      
      # Rewrite từ /api/v1/hdkt/auth/... thành /hdkt/auth/...
      rewrite ^/api/v1/hdkt/(.*) /hdkt/$1 break;
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Authorization $http_authorization;
      proxy_pass_request_headers on;
      
      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }

    # Thêm location /hdkt/ để truy cập trực tiếp
    location /hdkt/ {
      proxy_pass http://backend_servers;
      
      # Basic headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Authorization $http_authorization;
      proxy_pass_request_headers on;
      
      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # OPTIONS method handling - SỬA ĐỔI
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
    
    # Thêm location cho WebSocket endpoint /ws
    location /ws {
      proxy_pass http://backend_servers/ws;
      
      # WebSocket headers
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400;
      
      # Bảo toàn token trong query params
      proxy_pass_request_headers on;
      proxy_set_header Authorization $http_authorization;
      
      # CORS headers
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      # add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      # add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      # add_header 'Access-Control-Allow-Credentials' 'true' always;
      # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

      # # Thêm xử lý OPTIONS cho WebSocket
      # if ($request_method = 'OPTIONS') {
      #   add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
      #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      #   add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With,If-Modified-Since' always;
      #   add_header 'Access-Control-Allow-Credentials' 'true' always;
      #   add_header 'Access-Control-Max-Age' 1728000;
      #   add_header 'Content-Type' 'text/plain charset=UTF-8';
      #   add_header 'Content-Length' 0;
      #   return 204;
      # }
    }
    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
  }
}